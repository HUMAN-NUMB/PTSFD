[{"C:\\Users\\26421\\Desktop\\PTSFD\\src\\main.js":"1","C:\\Users\\26421\\Desktop\\PTSFD\\src\\App.vue":"2","C:\\Users\\26421\\Desktop\\PTSFD\\src\\elementUI\\index.js":"3","C:\\Users\\26421\\Desktop\\PTSFD\\src\\router\\index.js":"4","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-heart.vue":"5","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-user.vue":"6","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-laugh.vue":"7","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-main.vue":"8","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-exit.vue":"9","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\test\\my-basic-test.vue":"10","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\test\\my-test.vue":"11","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\layout\\index.vue":"12","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\register\\index.vue":"13","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\login\\index.vue":"14","C:\\Users\\26421\\Desktop\\PTSFD\\src\\api\\index.js":"15","C:\\Users\\26421\\Desktop\\PTSFD\\src\\utils\\request.js":"16","C:\\Users\\26421\\Desktop\\PTSFD\\src\\store\\index.js":"17"},{"size":282,"mtime":1667550713674,"results":"18","hashOfConfig":"19"},{"size":365,"mtime":1667550713170,"results":"20","hashOfConfig":"19"},{"size":128,"mtime":1668358040477,"results":"21","hashOfConfig":"19"},{"size":1950,"mtime":1668490795541,"results":"22","hashOfConfig":"19"},{"size":8282,"mtime":1668493744151,"results":"23","hashOfConfig":"19"},{"size":7984,"mtime":1668767162431,"results":"24","hashOfConfig":"19"},{"size":10587,"mtime":1668767747891,"results":"25","hashOfConfig":"19"},{"size":5667,"mtime":1668786351201,"results":"26","hashOfConfig":"19"},{"size":1063,"mtime":1668785919552,"results":"27","hashOfConfig":"19"},{"size":8514,"mtime":1668785916567,"results":"28","hashOfConfig":"19"},{"size":1927,"mtime":1668747647152,"results":"29","hashOfConfig":"19"},{"size":10161,"mtime":1668787068154,"results":"30","hashOfConfig":"19"},{"size":6513,"mtime":1668089345019,"results":"31","hashOfConfig":"19"},{"size":5822,"mtime":1668785900125,"results":"32","hashOfConfig":"19"},{"size":4920,"mtime":1668502655022,"results":"33","hashOfConfig":"19"},{"size":2365,"mtime":1668502435660,"results":"34","hashOfConfig":"19"},{"size":1526,"mtime":1668435291802,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s4b5kw",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"C:\\Users\\26421\\Desktop\\PTSFD\\src\\main.js",[],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\App.vue",[],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\elementUI\\index.js",[],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\router\\index.js",[],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-heart.vue",["76","77","78","79"],"\r\n<template>\r\n  <div class=\"my-heart\">\r\n      <div class=\"commentArea\" >\r\n\r\n        <div   class=\"eachBox\" v-bind:class=\"{ 'eachBox': msgdata[index].isLeft, 'eachBox2': !msgdata[index].isLeft }\" v-for=\"(item,index) in msgdata\" :key=\"index\">\r\n          <div :style=\"{'background-image':'url('+item.favicon+')'}\" ></div>\r\n          <div ><span>{{item.message}}</span></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"sendArea\">\r\n          <div class=\"icons\" v-for=\"(item,index) in getIcons\" :key=\"index\" :style=\"{'background-image':'url('+item.img_url+')'}\"></div>\r\n          <div class=\"input\">\r\n              <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" v-model=\"textWillSend\"></textarea>\r\n              <div class=\"input_btn\" @click=\"sendToWs\"><span>发送</span></div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'my-heart',\r\n  data () {\r\n    return {\r\n      isLeft: true,\r\n      /**\r\n       * websocket部分\r\n       */\r\n      // textarea框的信息\r\n      textWillSend: '',\r\n      path: 'wss://b2de4f056142.akimitsu.top/ws/chat',\r\n      socket: '',\r\n      favicon: '',\r\n      message: '12345',\r\n      msgdata: [],\r\n\r\n      input: '',\r\n      // 获得的资源\r\n      // getSource: [\r\n      //   { img: require('@/assets/images/头像1.jpg'), info: '听说有人想不开' },\r\n      //   { img: require('@/assets/images/头像2.jpg'), info: '差不多得了' },\r\n      //   { img: require('@/assets/images/头像3.jpg'), info: '我前天刚刚跳来着，可惜没挂' },\r\n      //   { img: require('@/assets/images/头像1.jpg'), info: '听说有人想不开' },\r\n      //   { img: require('@/assets/images/头像2.jpg'), info: '差不多得了' },\r\n      //   { img: require('@/assets/images/头像3.jpg'), info: '我前天刚刚跳来着，可惜没挂' },\r\n      //   { img: require('@/assets/images/头像2.jpg'), info: '差不多得了' },\r\n      //   { img: require('@/assets/images/头像3.jpg'), info: '我前天刚刚跳来着，可惜没挂' },\r\n\r\n      //   { img: require('@/assets/images/头像2.jpg'), info: '差不多得了' },\r\n      //   { img: require('@/assets/images/头像3.jpg'), info: '我前天刚刚跳来着，可惜没挂' }\r\n\r\n      // ],\r\n      getIcons: [\r\n        { img_url: require('@/assets/images/视频图标(心灵树洞).png') },\r\n        { img_url: require('@/assets/images/图片图标.png') },\r\n        { img_url: require('@/assets/images/链接图标.png') },\r\n        { img_url: require('@/assets/images/位置图标.png') },\r\n        { img_url: require('@/assets/images/设置图标.png') }\r\n      ]\r\n\r\n    }\r\n  },\r\n  created () {\r\n    // 指向vue\r\n    // const thisVue = this\r\n    // document.onkeydown = function (event) {\r\n    //   if (event.key === 'Enter') {\r\n    //     console.log(event.key)\r\n    //   }\r\n    // 进入时绑定enter键盘事件\r\n    window.addEventListener('keydown', this.keyDownEnter)\r\n    // thisVue.sendToWs()\r\n    // }\r\n  },\r\n  mounted () {\r\n    this.favicon = this.$store.state.userInfo.image// window.btoa(\r\n    // 初始化\r\n    this.init()\r\n  },\r\n\r\n  // 关闭websocket（切记）\r\n  destroyed () {\r\n    // 销毁监听websocket\r\n    this.socket.onclose = this.close\r\n    window.removeEventListener('keydown', this.keyDownEnter)\r\n    console.log('已销毁')\r\n  },\r\n  methods: {\r\n    /**\r\n     * websocket\r\n     */\r\n    // 初始化websocket\r\n    init: function () {\r\n      if (typeof (WebSocket) === 'undefined') {\r\n        alert('您的浏览器不支持socket')\r\n      } else {\r\n        // 实例化socket\r\n        const Newstr = this.$store.state.token.replace('Bearer ', '')\r\n        this.socket = new WebSocket(`${this.path}?${Newstr}`)\r\n        // 监听socket连接\r\n        this.socket.onopen = this.open\r\n        // 监听socket错误信息\r\n        this.socket.onerror = this.error\r\n        // 监听socket消息\r\n        this.socket.onmessage = this.getMessage\r\n      }\r\n    },\r\n    // 开启时的函数\r\n    open: function () {\r\n      console.log('socket连接成功')\r\n    },\r\n    // 出错时的函数\r\n    error: function () {\r\n      console.log('连接错误')\r\n    },\r\n    // 获取消息的函数\r\n    getMessage: function (msg) {\r\n      const data = JSON.parse(msg.data)\r\n      if (data.favicon === this.favicon) this.isLeft = false\r\n      else this.isLeft = true\r\n      data.isLeft = this.isLeft\r\n      // console.log(this.isLeft)\r\n      // data.favicon = window.atob(msg.data.favicon)\r\n      this.msgdata.push(data)\r\n\r\n      // console.log(data)\r\n    },\r\n    // 发送消息的函数\r\n    send: function () {\r\n      this.socket.send(\r\n        JSON.stringify(\r\n          {\r\n            favicon: this.favicon,\r\n            message: this.textWillSend\r\n          }\r\n        )\r\n      )\r\n    },\r\n    // 关闭时的函数\r\n    close: function () {\r\n      console.log('socket已经关闭')\r\n    },\r\n\r\n    /**\r\n     * 发送事件\r\n     */\r\n    // 绑定键盘事件\r\n    keyDownEnter (e) {\r\n      // console.log(e.key)\r\n      if (e.key === 'Enter') {\r\n        this.sendToWs()\r\n      }\r\n    },\r\n    // 点击发送，发送信息\r\n    sendToWs () {\r\n      this.send()\r\n      // 发送完清空textarea\r\n      this.textWillSend = ''\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.my-heart{\r\n    width: 90%;\r\n    height: 95%;\r\n    background-color: rgb(255, 255, 255);\r\n    border-radius: 1rem;\r\n    //水平垂直\r\n    margin: 0 auto;\r\n        max-height: 95%;\r\n    .commentArea{\r\n        margin: 0 auto;\r\n        width: 95%;\r\n        height: 59vh;\r\n        // background-color: red;\r\n        overflow: auto;\r\n        max-height: 70%;\r\n        // display: flex;\r\n        .eachBox{\r\n          width: 100%;\r\n          height: 70px;\r\n          margin-top: 10px;\r\n            // flex: 1;\r\n  // flex-shrink: 0;\r\n  // height: 0;\r\n  // width: 100%;\r\n  // display: flex;\r\n          // background-color: rgb(235, 235, 235);\r\n          display: flex;\r\n          align-items: center;\r\n          div:first-child{\r\n            // display: inline-block;\r\n            width: 50px;\r\n            height: 50px;\r\n            background-size: 100% 100%;\r\n            border-radius: 25px;\r\n          }\r\n          div:last-child{\r\n            // display: inline-block;\r\n            // width: 50p;\r\n            display: flex;\r\n            align-items: center;\r\n            height: 34px;\r\n            background-color: rgb(98, 178, 231);\r\n            position: relative;\r\n            top: 6px;\r\n            left: 3%;\r\n            border-radius: 5px;\r\n            span{\r\n              color: rgb(236, 254, 234);\r\n              padding: 0 24px;\r\n            }\r\n          }\r\n        }\r\n        .eachBox2{\r\n          align-items: center ;\r\n          flex-direction: row-reverse;\r\n          div:last-child{\r\n            top: 6px;\r\n            // right: 40px;\r\n            left: -3%;\r\n          }\r\n        }\r\n    }\r\n    .sendArea{\r\n        border-top: 1px solid rgb(167, 167, 167);\r\n        margin: 0 auto;\r\n        width: 95%;\r\n        height: 14vh;\r\n        background-color: white;\r\n\r\n        .icons{\r\n          width: 26px;\r\n          height: 26px;\r\n          // background-color: red;\r\n          background-size: 100% 100%;\r\n          display: inline-block;\r\n          margin-right: 3%;\r\n          margin-top: 1%;\r\n        }\r\n        .input{\r\n          height: 74%;\r\n          width: 100%;\r\n          position: relative;\r\n          >textarea{\r\n            height: 49%;\r\n            width: 99%;\r\n            border: none;\r\n            outline:none;\r\n            color: rgb(135, 135, 135);\r\n            font-size: 20px;\r\n            //设置不可拖动\r\n            resize: none;\r\n          }\r\n          // >textarea:focus-visible{\r\n          //   outline-offset: none !important;;\r\n          // }\r\n          .input_btn{\r\n            width: 9%;\r\n            height: 30%;\r\n            background-color: #60afea;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            border-radius: 14px;\r\n            position: absolute;\r\n            bottom: 1px;\r\n            right: 3%;\r\n            >span{\r\n              color: white;\r\n              font-size: 19px;\r\n            }\r\n          }\r\n          .input_btn:hover{\r\n            cursor: pointer;\r\n          }\r\n        }\r\n    }\r\n}\r\n</style>\r\n","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-user.vue",["80","81","82","83","84"],"<template>\r\n  <div class=\"my-user\">\r\n    <!-- 头像编辑功能 -->\r\n      <div class=\"photo-config\">\r\n        <img src=\"../../assets/images/用户头像.png\" alt=\"\" v-if=\"!avatar\" class=\"the_img\">\r\n        <img :src=\"avatar\" alt=\"\" v-else class=\"the_img\">\r\n        <!--  -->\r\n\r\n        <input type=\"file\" style=\"display:none\" ref=\"iptRef\" @change=\"onFileChange\" accept=\"image/*\">\r\n        <div class=\"avatar_btn\" @click=\"chooseImg\">\r\n            <img src=\"../../assets/images/编辑图标.png\" alt=\"\" >\r\n            <span>编辑头像</span>\r\n        </div>\r\n        <!-- 保存到后台头像信息 -->\r\n        <!-- <div class=\"avatar_btn\"  @click=\"uploadFnImg\">\r\n            <img src=\"../../assets/images/编辑图标.png\" alt=\"\" >\r\n            <span>保存头像</span>\r\n        </div> -->\r\n\r\n      </div>\r\n      <!-- 基本信息编辑功能 -->\r\n      <div class=\"info-config\">\r\n          <!-- 标题 -->\r\n          <div class=\"info-config-title\"><span>基本信息</span></div>\r\n          <!-- 表单 -->\r\n          <div class=\"info-config-edit\">\r\n              <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                  <el-form-item  prop=\"nickname\" label=\"姓名：\" ><el-input v-model=\"ruleForm.nickname\" :placeholder=\"nickname\" @change=\"print\"></el-input></el-form-item>\r\n                  <el-form-item  prop=\"sex\" label=\"性别：\"><el-radio v-model=\"ruleForm.sex\" label=\"男\"  v-if=\"ruleForm.sex === '男' || ruleForm.sex === '女'\">男</el-radio><el-radio v-model=\"ruleForm.sex\" label=\"女\" v-if=\"ruleForm.sex === '男' || ruleForm.sex === '女'\">女</el-radio><el-radio v-model=\"ruleForm.sex\" label=\"权限狗\" v-if=\"ruleForm.sex === '权限狗'\">权限狗</el-radio></el-form-item>\r\n                  <el-form-item  prop=\"birthday\"  label=\"出生日期：\"><el-date-picker type=\"date\" :placeholder=\"birthday\" v-model=\"ruleForm.birthday\" style=\"width: 100%;\"  value-format=\"yyyy-MM-dd\"></el-date-picker></el-form-item>\r\n                  <el-form-item  prop=\"introduction\" label=\"简介：\"><el-input v-model=\"ruleForm.introduction\" :placeholder=\"introduction\"></el-input></el-form-item>\r\n                  <el-form-item  prop=\"contact\" label=\"联系方式：\"><el-input v-model=\"ruleForm.contact\" :placeholder=\"contact\"></el-input></el-form-item>\r\n                  <el-form-item  prop=\"area\"  label=\"地区：\"><el-input v-model=\"ruleForm.area\" :placeholder=\"area\"></el-input></el-form-item>\r\n                  <el-form-item><el-button type=\"primary\" @click=\"saveUserInfo\">保存</el-button></el-form-item>\r\n              </el-form>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { updateAvatarAPI } from '@/api'\r\nimport { mapGetters } from 'vuex'\r\n// import { onMounted } from 'vue'\r\nexport default {\r\n  name: 'my-user',\r\n  computed: {\r\n    ...mapGetters(['nickname', 'image', 'introduction', 'area', 'contact', 'sex', 'birthday'])\r\n  },\r\n  data () {\r\n    return {\r\n      // 保存照片的链接--base64字符串\r\n      avatar: '',\r\n      // 表单数据部分,目前无用\r\n      // ruleForm: {\r\n      //   nickname: '',\r\n      //   sex: '',\r\n      //   birthday: '',\r\n      //   introduction: '',\r\n      //   contact: '',\r\n      //   area: ''\r\n      // },\r\n      ruleForm: this.$store.state.userInfo,\r\n      rules: {\r\n        nickname: [\r\n          { required: false, message: '姓名', trigger: 'blur' }\r\n          // { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n        sex: [{ required: false, message: '性别', trigger: 'blur' }\r\n          // { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n        birthday: [\r\n          { required: false, message: '生日', trigger: 'blur', type: 'string' }\r\n          // { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n        introduction: [\r\n          { required: false, message: '简介', trigger: 'blur' }\r\n          // { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n        contact: [\r\n          { required: false, message: '联系方式', trigger: 'blur' }\r\n          // { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ],\r\n        area: [\r\n          { required: false, message: '地区', trigger: 'blur' }\r\n          // { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    print () {\r\n      console.log(this.ruleForm.nickname, this.$store.state.userInfo)\r\n    },\r\n    // 点击选择头像\r\n    chooseImg () {\r\n      // 模拟点击事件\r\n      this.$refs.iptRef.click()\r\n    },\r\n    // 选择完图片后要读取该文件，然后转化格式\r\n    async onFileChange (e) {\r\n      // console.log(1)\r\n      // 获取文件信息\r\n      const files = e.target.files\r\n      // console.log(files)\r\n      // 没获取到\r\n      if (files[0].length === 0) {\r\n        this.avatar = ''\r\n      } else {\r\n        // const fr = new FileReader()\r\n        // fr.readAsDataURL(files[0])\r\n        // fr.onload = e => {\r\n        // 在展示区展示\r\n        // this.avatar = e.target.result\r\n        // console.log(123)\r\n      }\r\n      this.avatar = URL.createObjectURL(files[0])\r\n      console.log(this.avatar)\r\n      const form = new FormData()\r\n      form.append('image', files[0])\r\n      await updateAvatarAPI(form)\r\n      // console.log(res)\r\n      this.$message.success('保存成功')\r\n      // 更新个人信息\r\n      this.$store.dispatch('initUserInfo')\r\n      // console.log(this.ruleForm)\r\n    },\r\n    // 更新后台头像信息\r\n    async uploadFnImg () {\r\n      // const { data: res } = await updateAvatarAPI(this.avatar)\r\n\r\n      // this.$message.success(res.message)\r\n      // 更新个人信息\r\n      // this.$store.dispatch('initUserInfo')\r\n\r\n      // this.$message.error(res.message)\r\n    },\r\n\r\n    // 点击保存用户基本信息\r\n    saveUserInfo () {\r\n      this.$refs.ruleForm.validate(async valid => {\r\n        if (valid) {\r\n          console.log(this.ruleForm)\r\n          // 发出请求，送出表单内容\r\n\r\n          await updateAvatarAPI({\r\n            area: this.ruleForm.area,\r\n            birthday: this.ruleForm.birthday,\r\n            contact: this.ruleForm.contact,\r\n            introduction: this.ruleForm.introduction,\r\n            nickname: this.ruleForm.nickname,\r\n            sex: this.ruleForm.sex\r\n          })\r\n          // console.log(res)\r\n          // 更新个人信息\r\n          this.$store.dispatch('initUserInfo')\r\n          this.$message.success('个人信息已更新')\r\n        } else { console.log(2) }\r\n      })\r\n    }\r\n  },\r\n\r\n  // created(){\r\n  // 进来时获取用户信息\r\n  // }\r\n\r\n  async mounted () {\r\n    console.log(this.ruleForm)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.my-user{\r\n  width: 90%;\r\n  height: 95%;\r\n  background-color: rgb(255, 255, 255);\r\n  border-radius: 1rem;\r\n  //水平垂直\r\n  margin: 0 auto;\r\n  //头像设置\r\n  .photo-config{\r\n    padding-top: 5%;\r\n    height: 15%;\r\n    padding-left: 12rem;\r\n    >*{\r\n      display: inline-block;\r\n    }\r\n    .the_img{\r\n      border: 1px solid black;\r\n      width: 88px;\r\n      height: 89px;\r\n    }\r\n    .avatar_btn{\r\n      border: 1px solid black;\r\n      margin-left: 3rem;\r\n      img{\r\n      width: 15px;\r\n      height: 15px;\r\n      }\r\n    }\r\n    .avatar_btn:hover{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .info-config{\r\n    margin-left: 10%;\r\n    margin-top: 7%;\r\n    height: 73%;\r\n    .info-config-title{\r\n      border-left: 8px rgb(1, 142, 237) solid;\r\n      span{\r\n        margin-left: 13px;\r\n      }\r\n    }\r\n    .info-config-edit{\r\n      margin-top: 57px;\r\n      .demo-ruleForm{\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n      }\r\n    }\r\n  }\r\n}\r\n.el-input{\r\n  // height: 200px;\r\n}\r\n.el-input__inner{\r\n\r\n  // height: 40% ;\r\n}\r\n.el-form-item{\r\n  width: 40%;\r\n}\r\n</style>\r\n","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-laugh.vue",[],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-main.vue",["85","86","87"],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\my-exit.vue",[],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\test\\my-basic-test.vue",["88","89","90","91"],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\routes\\test\\my-test.vue",[],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\layout\\index.vue",["92","93"],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\register\\index.vue",["94"],"<template>\r\n  <!-- 注册页面的整体盒子 -->\r\n  <div class=\"reg-container\">\r\n    <!-- 注册的盒子 -->\r\n    <div class=\"reg-box\">\r\n      <!-- 标题的盒子 -->\r\n      <div class=\"title-box\"><img src=\"../../assets/images/标题logo(半留白).png\" alt=\"\"></div>\r\n      <div class=\"left_right-box\">\r\n          <div class=\"left-logo\"><img src=\"../../assets/images/左插图.png\" alt=\"\"></div>\r\n          <div class=\"right-form\">\r\n              <span>账号注册</span>\r\n              <el-form status-icon  :model=\"form\" :rules=\"rulesObj\" ref = \"form\">\r\n                <el-form-item  prop=\"username\">\r\n                  <div class=\"input_box\"><el-input type=\"text\" class=\"two-box\" autocomplete=\"off\" placeholder=\"请输入用户名\" v-model=\"form.username\"></el-input></div>\r\n                </el-form-item>\r\n                <el-form-item  prop=\"password\">\r\n                  <div class=\"input_box\"><el-input type=\"password\"  class=\"two-box\" autocomplete=\"off\" placeholder=\"请输入密码\" v-model=\"form.password\"> </el-input></div>\r\n                </el-form-item>\r\n                <el-form-item  prop=\"repassword\">\r\n                  <div class=\"input_box\"><el-input placeholder=\"请再次确认密码\" class=\"two-box\" v-model=\"form.repassword\" type=\"password\"></el-input></div>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                  <div class=\"input_box\"><el-button class=\"two-box\" type=\"primary\" @click=\"registerFn\">立即注册</el-button></div>\r\n\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <div class=\"input_box\"><el-button type=\"primary\" @click=\"$router.push({name: '/login'}) \" class=\"two-box\">返回登录</el-button></div>\r\n                </el-form-item>\r\n              </el-form>\r\n          </div>\r\n      </div>\r\n      <!-- 注册的表单区域 -->\r\n\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport { getListAPINew } from '@/api'\r\nexport default {\r\n  name: 'my-register',\r\n  data () {\r\n    // 必须在data函数里定义此箭头函数，才能确保this.form使用\r\n    const samePwd = (rule, value, callback) => {\r\n      if (value !== this.form.password) { callback(new Error('两次输入答案不一致')) } else { callback() }\r\n    }\r\n    return {\r\n\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        repassword: ''\r\n      },\r\n      rulesObj: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { pattern: /^[a-zA-z0-9]{1,10}$/, message: '用户名必须是1-10的大小写字母数字', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { pattern: /^\\S{5,15}$/, message: '密码必须是5-15的非空字符', trigger: 'blur' }\r\n        ],\r\n        repassword: [\r\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n          // { pattern: /^\\S{6,15}$/, message: '密码必须是6-15的非空字符', trigger: 'blur' },\r\n          { validator: samePwd, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 注册->点击事件\r\n    registerFn () {\r\n      this.$refs.form.validate(async valid => {\r\n        if (valid) {\r\n          const res = await getListAPINew(this.form)\r\n          console.log(res)\r\n          // 异常处理:return结束并弹窗提示\r\n          // if (res.code === 1) { return this.$message({type:'error',}) }\r\n          // 注册成功弹窗提示\r\n          this.$message({\r\n            message: '注册成功',\r\n            type: 'success'\r\n          })\r\n          // 路由跳转\r\n          this.$router.push({ name: '/login' })\r\n        } else { return false }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.reg-container {\r\n  background: url(\"../../assets/images/背景板.jpg\") center;\r\n  background-size: cover;\r\n  //找父级\r\n  height: 100%;\r\n  .reg-box {\r\n    border: 2.74px solid #559dce;\r\n    width: 89%;\r\n    height: 88%;\r\n    background-color: #fff;\r\n    border-radius: 14px;\r\n    //设置定位，成功定位在中央\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    //左右撑开一点\r\n    transform: translate(-50%, -50%);\r\n    //width包含内padding和border\r\n    padding: 0 30px;\r\n    box-sizing: border-box;\r\n    .title-box {\r\n          // background: url(\"../../assets/images/标题logo.png\") center no-repeat;\r\n          height: 22%;\r\n          display:flex;\r\n          flex-direction:column;\r\n          // margin-bottom: 10rem;\r\n          img{\r\n            align-self:center;\r\n            // margin: 0 auto;\r\n              width: 44%;\r\n              height: 100%;\r\n          }\r\n    }\r\n    .left_right-box{\r\n          width: 100%;\r\n          height: 75%;\r\n          // background-color: red;\r\n          // display: flex;\r\n          display: flex;\r\n          flex-direction: row;\r\n          .left-logo{\r\n                width: 45%;\r\n                // background-color: blue;\r\n                img{\r\n                  width: 100%;\r\n                  height: 100%;\r\n                }\r\n          }\r\n          .right-form{\r\n                background: url(\"../../assets/images/中心背景.png\") center no-repeat;\r\n                width: 55%;\r\n                display:flex;flex-direction:column;\r\n                >span{\r\n                      // border-bottom: ;\r\n                      margin-bottom: 1rem;\r\n                      font-size: 2rem;\r\n                      align-self: center;\r\n                      font-weight: 600;\r\n                      //增加文字间的距离\r\n                      letter-spacing: .5rem;\r\n                }\r\n                .input_box{\r\n                      height: 3.8rem;\r\n                      width: 75%;\r\n                      // align-self: center;\r\n                      margin: 0 auto;\r\n                      display:flex;flex-direction:column;\r\n                    //四个框\r\n                    .two-box{\r\n                          align-self: center;\r\n                          // opacity: 1;\r\n                          width: 75%;\r\n                          border: none ;\r\n                          border-radius: 2rem ;\r\n                    }\r\n\r\n            }\r\n    }\r\n  }\r\n\r\n}\r\n  }\r\n/deep/ .el-input__inner{\r\n      height: 3.3rem;\r\n   border-radius: 2rem !important;\r\n}\r\n/deep/ .el-button--primary{\r\n  font-size: 1.7rem;\r\n  height: 3.3rem;\r\n  background-color: rgb(85, 156, 206);\r\n}\r\n/deep/ .el-form-item {\r\n      margin-bottom: 0.2rem;\r\n}\r\n</style>\r\n","C:\\Users\\26421\\Desktop\\PTSFD\\src\\views\\login\\index.vue",["95"],"C:\\Users\\26421\\Desktop\\PTSFD\\src\\api\\index.js",["96"],"// 封装的是具体的接口请求方法\r\n// 注意：每个方法只负责请求一个url地址\r\nimport { myAxios, myAxiosNew, myAxiosNewFromYiYan } from '@/utils/request'\r\n// import {  } from '@/utils/request'\r\n// 引入store\r\nimport store from '../store/index'\r\n// 旧注册\r\nexport const getListAPI = ({ username, password, repassword }) => {\r\n  // 原地是一个Promise对象（内部包含原生ajax请求）\r\n  // return这个Promise对象到逻辑页面，去那边对Promise对象提取结果\r\n  return myAxios({\r\n    url: '/api/reg',\r\n    method: 'POST',\r\n    // axios传参params，data\r\n    // params的对象参数名和值，axios源码会把参数和值，拼接在url?后面给后台（query查询字符串）\r\n    // data的对象参数名和值，axios源码会把参数和值，拼接在请求体里（body参数）\r\n    data: {\r\n      username,\r\n      password,\r\n      repassword\r\n    }\r\n  })\r\n}\r\n// 新注册\r\nexport const getListAPINew = ({ username, password, repassword }) => {\r\n  // 原地是一个Promise对象（内部包含原生ajax请求）\r\n  // return这个Promise对象到逻辑页面，去那边对Promise对象提取结果\r\n  return myAxiosNew({\r\n    url: '/register',\r\n    method: 'POST',\r\n    // axios传参params，data\r\n    // params的对象参数名和值，axios源码会把参数和值，拼接在url?后面给后台（query查询字符串）\r\n    // data的对象参数名和值，axios源码会把参数和值，拼接在请求体里（body参数）\r\n    data: {\r\n      username,\r\n      password,\r\n      repassword\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} param0 {username:用户名，password:密码}\r\n * @returns Promise对象\r\n */\r\n// 旧登录\r\nexport const loginAPI = ({ username, password }) => {\r\n  return myAxios({\r\n    url: '/api/login',\r\n    method: 'POST',\r\n    data: {\r\n      username,\r\n      password\r\n    }\r\n  })\r\n}\r\n// 新登录\r\nexport const loginAPINew = ({ username, password }) => {\r\n  return myAxiosNew({\r\n    url: '/auth',\r\n    method: 'POST',\r\n    data: {\r\n      username,\r\n      password\r\n    }\r\n  })\r\n}\r\n\r\n// 更新token\r\nexport const UpdateTokenAPI = (refresh) => {\r\n  return myAxiosNew({\r\n    url: '/auth/refresh',\r\n    method: 'POST',\r\n    data: {\r\n      refresh: refresh\r\n    }\r\n  })\r\n}\r\n// 获得用户信息--旧\r\nexport const getUserInfoAPI = () => {\r\n  return myAxios({\r\n    url: '/my/userinfo',\r\n    // method不屑默认就是‘get’方式请求\r\n    method: 'GET',\r\n    // 传参给后台：params（查询字符串query）、data（请求体body）、headers（请求头）\r\n    // 由于this此处指向无法指向vm，所以要引入store\r\n    headers: { Authorization: store.state.token }\r\n  })\r\n}\r\n// 获得用户信息--新\r\nexport const getUserInfoAPINew = () => {\r\n  return myAxiosNew({\r\n    url: '/info',\r\n    // method不屑默认就是‘get’方式请求\r\n    method: 'GET',\r\n    // 传参给后台：params（查询字符串query）、data（请求体body）、headers（请求头）\r\n    // 由于this此处指向无法指向vm，所以要引入store\r\n\r\n    headers: { Authorization: store.state.token }\r\n  })\r\n}\r\n\r\n// 更新头像信息\r\nexport const updateAvatarAPI = (form) => {\r\n  console.log(form)\r\n  return myAxiosNew({\r\n    url: '/info',\r\n    method: 'PATCH',\r\n    data: form,\r\n    headers: { Authorization: store.state.token }\r\n  })\r\n}\r\n\r\n/**\r\n * 等待接口 用户个人信息\r\n */\r\n// export const saveUserInfoAPI = ({ name, age, birthday, briefInfo, contact, area }) => {\r\n//   return myAxiosNew(\r\n//     {\r\n//       url: '/info/',\r\n//       method: 'PUT',\r\n//       data: {\r\n//         name, age, birthday, briefInfo, contact, area\r\n//       },\r\n//       headers: { Authorization: store.state.token }\r\n//     }\r\n//   )\r\n// }\r\n\r\n/**\r\n * 等待接口 可以写死\r\n */\r\n// export const getBookSourseAPI = () => {\r\n//   return myAxios(\r\n//     {\r\n//       url: '',\r\n//       method: '',\r\n//       data: {},\r\n//       headers: {}\r\n//     }\r\n//   )\r\n// }\r\n\r\n/**\r\n * 获取题目资源\r\n */\r\nexport const getTestSourseAPI = () => {\r\n  return myAxiosNew(\r\n    {\r\n      url: '/question',\r\n      method: 'GET',\r\n      // data: { },\r\n      headers: { Authorization: store.state.token, advance: '' }\r\n    }\r\n  )\r\n}\r\n\r\n/**\r\n * 发送分数记录给后台\r\n */\r\nexport const sendScoreToBackEnd = (score) => {\r\n  return myAxiosNew(\r\n    {\r\n      url: '/score',\r\n      method: 'POST',\r\n      data: { score },\r\n      headers: { Authorization: store.state.token }\r\n\r\n    }\r\n  )\r\n}\r\n\r\n/**\r\n * 获取用户的答题信息\r\n */\r\nexport const getScoreAndCount = () => {\r\n  return myAxiosNew(\r\n    {\r\n      url: '/score',\r\n      method: 'GET',\r\n      // data: { score },\r\n      headers: { Authorization: store.state.token }\r\n\r\n    }\r\n  )\r\n}\r\n/**\r\n * 获得一言文字\r\n */\r\nexport const getTestFromYiYan = () => {\r\n  return myAxiosNewFromYiYan(\r\n    {\r\n      url: '',\r\n      params: { c: 'f', encode: 'text' }\r\n    }\r\n  )\r\n}\r\n","C:\\Users\\26421\\Desktop\\PTSFD\\src\\utils\\request.js",["97","98","99","100"],"// 基于axios封装，网络请求的函数\r\nimport axios from 'axios'\r\nimport { Message } from 'element-ui'\r\nimport store from '@/store'\r\nimport { UpdateTokenAPI } from '@/api'\r\nimport router from '@/router'\r\n// axios.create()创建一个带配置项的自定义axios函数\r\n// myAxios请求的时候，地址baseURL+url，然后去请求服务器\r\nexport const myAxios = axios.create({\r\n  baseURL: 'http://big-event-vue-api-t.itheima.net'\r\n})\r\nexport const myAxiosNew = axios.create({\r\n  baseURL: 'https://b2de4f056142.akimitsu.top/'\r\n})\r\nexport const myAxiosNewFromYiYan = axios.create({\r\n  baseURL: 'https://v1.hitokoto.cn'\r\n})\r\n\r\n// 定义请求拦截器\r\n// myAxiosNew.interceptors.request.use(function (config) {\r\n//   console.log(config)\r\n// }, function (err) {\r\n//   return Promise.reject(err)\r\n// })\r\n// 定义响应拦截器--针对登录失败和注册失败\r\nmyAxiosNew.interceptors.response.use(function (response) {\r\n  // 响应http状态码为2xx或3xx时触发成功的回调，形参中的“response”是“成功的结果”\r\n  // return到axios原地Promise对象，作为成功的结果\r\n  // console.log(response.request)\r\n  console.log(response)\r\n  return response\r\n}, async function (err) {\r\n  console.dir(err)\r\n  // 登录失败的情况，提示\r\n  if (err.response.status === 401) {\r\n    if (!store.state.token) Message.error('登录失败')\r\n    else {\r\n      // const newToken = await UpdateTokenAPI(this.$store.state.refresh)\r\n      // console.log(newToken)\r\n      Message.error('token已过期，正在为您更新')\r\n      const { data: newToken } = await UpdateTokenAPI(store.state.refresh)\r\n      console.log(newToken)\r\n      store.state.token = `Bearer ${newToken.access}`\r\n      console.log(store.state.token)\r\n      // Message.success('请重进该功能模块')\r\n      router.go(0)\r\n      window.location.reload()\r\n    }\r\n  } else if (err.response.status === 400) {\r\n    Message.error('表单提交有误!')\r\n  }\r\n  // 响应状态码为4xx，5xx时触发失败的回调，形参中的error是“失败的结果”\r\n  // return到axios原地Promise对象，作为失败拒绝的状态（如果那边用try+catch或者catch捕获，\r\n  // 可以捕获到我们传递过去的这个err变量的值）\r\n  return Promise.reject(err)\r\n}\r\n)\r\n// 导出axios自定义函数\r\n// export default myAxios\r\n// export default myAxiosNew\r\n","C:\\Users\\26421\\Desktop\\PTSFD\\src\\store\\index.js",["101"],"import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\n// api获取用户信息\nimport { getUserInfoAPINew } from '@/api'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    // 用来存储登录成功之后，得到的token\n    token: '',\n    // 刷新令牌\n    refresh: '',\n    // 用来存储登录成功并跳转到主页面时，得到的用户信息\n    userInfo: {}\n  },\n  getters: {\n    // username: (state) => state.userInfo.username,\n    nickname: (state) => state.userInfo.nickname,\n    sex: (state) => state.userInfo.sex,\n    area: (state) => state.userInfo.area,\n    contact: (state) => state.userInfo.contact,\n    image: (state) => state.userInfo.image,\n    introduction: (state) => state.userInfo.introduction,\n    birthday: (state) => state.userInfo.birthday\n  },\n  mutations: {\n    // 更新token的函数\n    updataToken (state, newToken) {\n      state.token = newToken\n    },\n    // 获取refresh的函数\n    updateRefresh (state, newValue) {\n      state.refresh = newValue\n    },\n    // 将获取到的用户信息存入vuex\n    updateUserInfo (state, newUI) {\n      state.userInfo = newUI\n    }\n  },\n  actions: {\n    // 异步获得用户信息\n    async initUserInfo (context) {\n      const { data: res } = await getUserInfoAPINew()\n      console.log(res)\n      context.commit('updateUserInfo', res)\n    }\n  },\n  modules: {\n  },\n  // 配置为vuex的插件\n  plugins: [createPersistedState()]\n})\n// vuex默认保存再内存中，刷新会清空\n",{"ruleId":"102","severity":1,"message":"103","line":88,"column":5,"nodeType":"104","messageId":"105","endLine":88,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":112,"column":7,"nodeType":"104","messageId":"105","endLine":112,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":116,"column":7,"nodeType":"104","messageId":"105","endLine":116,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":143,"column":7,"nodeType":"104","messageId":"105","endLine":143,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":93,"column":7,"nodeType":"104","messageId":"105","endLine":93,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":118,"column":7,"nodeType":"104","messageId":"105","endLine":118,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":143,"column":11,"nodeType":"104","messageId":"105","endLine":143,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":158,"column":18,"nodeType":"104","messageId":"105","endLine":158,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":168,"column":5,"nodeType":"104","messageId":"105","endLine":168,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":59,"column":5,"nodeType":"104","messageId":"105","endLine":59,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":69,"column":5,"nodeType":"104","messageId":"105","endLine":69,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":130,"column":5,"nodeType":"104","messageId":"105","endLine":130,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":38,"column":5,"nodeType":"104","messageId":"105","endLine":38,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":102,"column":7,"nodeType":"104","messageId":"105","endLine":102,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":112,"column":7,"nodeType":"104","messageId":"105","endLine":112,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":114,"column":9,"nodeType":"104","messageId":"105","endLine":114,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":115,"column":7,"nodeType":"104","messageId":"105","endLine":115,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":118,"column":7,"nodeType":"104","messageId":"105","endLine":118,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":78,"column":11,"nodeType":"104","messageId":"105","endLine":78,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":74,"column":11,"nodeType":"104","messageId":"105","endLine":74,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":106,"column":3,"nodeType":"104","messageId":"105","endLine":106,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":30,"column":3,"nodeType":"104","messageId":"105","endLine":30,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":33,"column":3,"nodeType":"104","messageId":"105","endLine":33,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":42,"column":7,"nodeType":"104","messageId":"105","endLine":42,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":44,"column":7,"nodeType":"104","messageId":"105","endLine":44,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":45,"column":7,"nodeType":"104","messageId":"105","endLine":45,"endColumn":18},"no-console","Unexpected console statement.","MemberExpression","unexpected"]