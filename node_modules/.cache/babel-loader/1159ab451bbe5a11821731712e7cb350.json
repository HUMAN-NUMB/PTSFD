{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate'; // api获取用户信息\n\nimport { getUserInfoAPINew } from '@/api';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    // 用来存储登录成功之后，得到的token\n    token: '',\n    // 用来存储登录成功并跳转到主页面时，得到的用户信息\n    userInfo: {}\n  },\n  getters: {\n    // username: (state) => state.userInfo.username,\n    nickname: state => state.userInfo.nickname,\n    image: state => state.userInfo.image\n  },\n  mutations: {\n    // 更新token的函数\n    updataToken(state, newToken) {\n      state.token = newToken;\n    },\n\n    // 将获取到的用户信息存入vuex\n    updateUserInfo(state, newUI) {\n      state.userInfo = newUI;\n    }\n\n  },\n  actions: {\n    // 异步获得用户信息\n    async initUserInfo(context) {\n      const {\n        data: res\n      } = await getUserInfoAPINew();\n      console.log(res); // context.commit('updateUserInfo', res.data)\n    }\n\n  },\n  modules: {},\n  // 配置为vuex的插件\n  plugins: [createPersistedState()]\n}); // vuex默认保存再内存中，刷新会清空","map":{"version":3,"names":["Vue","Vuex","createPersistedState","getUserInfoAPINew","use","Store","state","token","userInfo","getters","nickname","image","mutations","updataToken","newToken","updateUserInfo","newUI","actions","initUserInfo","context","data","res","console","log","modules","plugins"],"sources":["C:/Users/26421/Desktop/PTSFD/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\n// api获取用户信息\nimport { getUserInfoAPINew } from '@/api'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    // 用来存储登录成功之后，得到的token\n    token: '',\n    // 用来存储登录成功并跳转到主页面时，得到的用户信息\n    userInfo: {}\n  },\n  getters: {\n    // username: (state) => state.userInfo.username,\n    nickname: (state) => state.userInfo.nickname,\n    image: (state) => state.userInfo.image\n  },\n  mutations: {\n    // 更新token的函数\n    updataToken (state, newToken) {\n      state.token = newToken\n    },\n    // 将获取到的用户信息存入vuex\n    updateUserInfo (state, newUI) {\n      state.userInfo = newUI\n    }\n  },\n  actions: {\n    // 异步获得用户信息\n    async initUserInfo (context) {\n      const { data: res } = await getUserInfoAPINew()\n      console.log(res)\n      // context.commit('updateUserInfo', res.data)\n    }\n  },\n  modules: {\n  },\n  // 配置为vuex的插件\n  plugins: [createPersistedState()]\n})\n// vuex默认保存再内存中，刷新会清空\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC,C,CACA;;AACA,SAASC,iBAAT,QAAkC,OAAlC;AACAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACL;IACAC,KAAK,EAAE,EAFF;IAGL;IACAC,QAAQ,EAAE;EAJL,CADqB;EAO5BC,OAAO,EAAE;IACP;IACAC,QAAQ,EAAGJ,KAAD,IAAWA,KAAK,CAACE,QAAN,CAAeE,QAF7B;IAGPC,KAAK,EAAGL,KAAD,IAAWA,KAAK,CAACE,QAAN,CAAeG;EAH1B,CAPmB;EAY5BC,SAAS,EAAE;IACT;IACAC,WAAW,CAAEP,KAAF,EAASQ,QAAT,EAAmB;MAC5BR,KAAK,CAACC,KAAN,GAAcO,QAAd;IACD,CAJQ;;IAKT;IACAC,cAAc,CAAET,KAAF,EAASU,KAAT,EAAgB;MAC5BV,KAAK,CAACE,QAAN,GAAiBQ,KAAjB;IACD;;EARQ,CAZiB;EAsB5BC,OAAO,EAAE;IACP;IACA,MAAMC,YAAN,CAAoBC,OAApB,EAA6B;MAC3B,MAAM;QAAEC,IAAI,EAAEC;MAAR,IAAgB,MAAMlB,iBAAiB,EAA7C;MACAmB,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAF2B,CAG3B;IACD;;EANM,CAtBmB;EA8B5BG,OAAO,EAAE,EA9BmB;EAgC5B;EACAC,OAAO,EAAE,CAACvB,oBAAoB,EAArB;AAjCmB,CAAf,CAAf,C,CAmCA"},"metadata":{},"sourceType":"module"}