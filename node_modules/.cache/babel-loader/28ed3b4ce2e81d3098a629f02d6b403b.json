{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getTestSourseAPI, sendScoreToBackEnd } from '@/api'; // import '@/assets/font/font-main.css'\n\nexport default {\n  name: 'my-base-test',\n\n  async created() {\n    // 获取题目的资源\n    const {\n      data: res\n    } = await getTestSourseAPI();\n    this.accordingAPISC = res; // 动态赋值资源长度的全0数组\n\n    this.score_arr = new Array(this.accordingAPISC.length).fill(0);\n    console.log(this.score_arr);\n  },\n\n  mounted() {// console.log(this.score_arr)\n  },\n\n  data() {\n    return {\n      // 是否显示答案\n      isShow: false,\n      // 存放答案分值的数组\n      score_arr: new Array(20).fill(0),\n      // 总分\n      final_score: 0,\n      // API返回的资源\n      accordingAPISC: {},\n      // 题目的分数\n      questions_score: [1, 2, 3, 4],\n      questions_score_reserve: [4, 3, 2, 1],\n      // 题目的选项\n      questions_choice: ['偶尔', '稍有', '常有', '持续'],\n      // 当前的书本资源的索引，刚进来是0\n      qs_index: 0 // 题目的资源\n      // questions_resource: [\n      //   {\n      //     qs_title: '关于大学生跳楼的看法',\n      //     qs_choice: [\n      //       { detail: '如何评价', score: 1 },\n      //       { detail: '扎不多得了', score: 2 },\n      //       { detail: '神中神', score: 3 },\n      //       { detail: '不如原神', score: 4 }\n      //     ]\n      //   },\n      //   {\n      //     qs_title: '关于大学生跳楼的看法2',\n      //     qs_choice: [\n      //       { detail: '如何评价2', score: 1 },\n      //       { detail: '扎不多得了2', score: 2 },\n      //       { detail: '神中神2', score: 3 },\n      //       { detail: '不如原神2', score: 4 }\n      //     ]\n      //   },\n      //   {\n      //     qs_title: '关于大学生跳楼的看法3',\n      //     qs_choice: [\n      //       { detail: '如何评价3', score: 1 },\n      //       { detail: '扎不多得了323133131233', score: 2 },\n      //       { detail: '神中神3', score: 3 },\n      //       { detail: '不如原神3', score: 4 }\n      //     ]\n      //   }\n      // ],\n\n    };\n  },\n\n  methods: {\n    // 退出事件\n    exit() {\n      this.$router.push({\n        name: 'main'\n      });\n      Pubsub.publish('exitCancel', 0);\n    },\n\n    // 切换下一道\n    nextQS() {\n      this.qs_index++;\n      console.log(this.score_arr);\n    },\n\n    // 切换上一道\n    lastQS() {\n      this.qs_index--;\n    },\n\n    // 判断是否全部作答完毕\n    checkEntireQS() {\n      // 过滤出没有答题的索引index\n      const indexArr = this.score_arr.map((item, index) => index).filter((item, index) => {\n        return this.score_arr[item] === 0;\n      });\n      console.log(indexArr);\n\n      if (indexArr.length === 0) {\n        console.log(111);\n        return true;\n      } else {\n        // 找到最近未答题的题--跳转\n        this.qs_index = indexArr[0];\n        this.$message.success('未答题完毕!请检查');\n        return false;\n      }\n    },\n\n    // 提交分数并且将分数记录发给后台\n    async submitScore() {\n      if (!this.checkEntireQS()) return;\n      let score = 0;\n\n      for (const eachScore of this.score_arr) {\n        score += eachScore;\n      }\n\n      this.final_score = score; // 展示分数\n\n      this.isShow = true; // 发送存储分数给后台\n\n      await sendScoreToBackEnd(this.final_score);\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAyBA,6D,CACA;;AACA;EACAA,oBADA;;EAEA;IACA;IACA;MAAAC;IAAA;IACA,0BAHA,CAIA;;IACA;IAEAC;EACA,CAVA;;EAWAC,WACA;EACA,CAbA;;EAcAF;IACA;MACA;MACAG,aAFA;MAGA;MACAC,gCAJA;MAKA;MACAC,cANA;MAOA;MACAC,kBARA;MASA;MACAC,6BAVA;MAWAC,qCAXA;MAYA;MACAC,0CAbA;MAcA;MACAC,WAfA,CAgBA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IA7CA;EAgDA,CA/DA;;EAgEAC;IACA;IACAC;MACA;QAAAb;MAAA;MACAc;IACA,CALA;;IAMA;IACAC;MACA;MACAb;IACA,CAVA;;IAWA;IACAc;MACA;IACA,CAdA;;IAeA;IACAC;MACA;MACA;QAAA;MAAA;MACAf;;MACA;QACAA;QACA;MACA,CAHA,MAGA;QACA;QACA;QACA;QACA;MACA;IACA,CA7BA;;IA8BA;IACA;MACA;MACA;;MACA;QACAgB;MACA;;MACA,yBANA,CAOA;;MACA,mBARA,CASA;;MACA;IACA;;EA1CA;AAhEA","names":["name","data","console","mounted","isShow","score_arr","final_score","accordingAPISC","questions_score","questions_score_reserve","questions_choice","qs_index","methods","exit","Pubsub","nextQS","lastQS","checkEntireQS","score"],"sourceRoot":"src/views/routes/test","sources":["my-basic-test.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-base-test\">\r\n    <div v-if=\"isShow \" class=\"pop\">\r\n        <div class=\"img\">\r\n          <span>{{final_score}}</span>\r\n          <div class=\"exitBtn\" @click=\"exit\"><span>返回</span><img src=\"../../../assets/images/返回图标.png\" alt=\"\"></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"inner-box\" >\r\n        <span >{{qs_index+1}}、{{accordingAPISC[qs_index].question}}</span>\r\n        <div class=\"bottom-box\">\r\n            <el-radio-group v-model=\"score_arr[qs_index]\">\r\n                <el-radio :label=\"accordingAPISC[qs_index].order?questions_score[index]:questions_score_reserve[index]\" v-for=\"(item,index) in questions_choice\" :key=\"index\">{{String.fromCharCode(index+65)}}&nbsp;&nbsp;{{item}}</el-radio>\r\n            </el-radio-group>\r\n            <div class=\"btnGroup\">\r\n                <div class=\"left-btn\" @click=\"lastQS\" v-show=\"qs_index!== 0\"><img src=\"../../../assets/images/左箭头.png\" alt=\"\"><span>上一题</span></div>\r\n                <div class=\"right-btn\" @click=\"nextQS\" v-if=\"qs_index!== accordingAPISC.length-1\"><span>下一题</span><img src=\"../../../assets/images/右箭头.png\" alt=\"\"></div>\r\n                <div class=\"right-btn\" @click=\"submitScore\" v-else><span>提交</span><img src=\"../../../assets/images/右箭头.png\" alt=\"\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getTestSourseAPI, sendScoreToBackEnd } from '@/api'\r\n// import '@/assets/font/font-main.css'\r\nexport default {\r\n  name: 'my-base-test',\r\n  async created () {\r\n    // 获取题目的资源\r\n    const { data: res } = await getTestSourseAPI()\r\n    this.accordingAPISC = res\r\n    // 动态赋值资源长度的全0数组\r\n    this.score_arr = new Array(this.accordingAPISC.length).fill(0)\r\n\r\n    console.log(this.score_arr)\r\n  },\r\n  mounted () {\r\n    // console.log(this.score_arr)\r\n  },\r\n  data () {\r\n    return {\r\n      // 是否显示答案\r\n      isShow: false,\r\n      // 存放答案分值的数组\r\n      score_arr: new Array(20).fill(0),\r\n      // 总分\r\n      final_score: 0,\r\n      // API返回的资源\r\n      accordingAPISC: {},\r\n      // 题目的分数\r\n      questions_score: [1, 2, 3, 4],\r\n      questions_score_reserve: [4, 3, 2, 1],\r\n      // 题目的选项\r\n      questions_choice: ['偶尔', '稍有', '常有', '持续'],\r\n      // 当前的书本资源的索引，刚进来是0\r\n      qs_index: 0\r\n      // 题目的资源\r\n      // questions_resource: [\r\n      //   {\r\n      //     qs_title: '关于大学生跳楼的看法',\r\n      //     qs_choice: [\r\n      //       { detail: '如何评价', score: 1 },\r\n      //       { detail: '扎不多得了', score: 2 },\r\n      //       { detail: '神中神', score: 3 },\r\n      //       { detail: '不如原神', score: 4 }\r\n      //     ]\r\n      //   },\r\n      //   {\r\n      //     qs_title: '关于大学生跳楼的看法2',\r\n      //     qs_choice: [\r\n      //       { detail: '如何评价2', score: 1 },\r\n      //       { detail: '扎不多得了2', score: 2 },\r\n      //       { detail: '神中神2', score: 3 },\r\n      //       { detail: '不如原神2', score: 4 }\r\n      //     ]\r\n      //   },\r\n      //   {\r\n      //     qs_title: '关于大学生跳楼的看法3',\r\n      //     qs_choice: [\r\n      //       { detail: '如何评价3', score: 1 },\r\n      //       { detail: '扎不多得了323133131233', score: 2 },\r\n      //       { detail: '神中神3', score: 3 },\r\n      //       { detail: '不如原神3', score: 4 }\r\n      //     ]\r\n      //   }\r\n      // ],\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    // 退出事件\r\n    exit () {\r\n      this.$router.push({ name: 'main' })\r\n      Pubsub.publish('exitCancel', 0)\r\n    },\r\n    // 切换下一道\r\n    nextQS () {\r\n      this.qs_index++\r\n      console.log(this.score_arr)\r\n    },\r\n    // 切换上一道\r\n    lastQS () {\r\n      this.qs_index--\r\n    },\r\n    // 判断是否全部作答完毕\r\n    checkEntireQS () {\r\n      // 过滤出没有答题的索引index\r\n      const indexArr = this.score_arr.map((item, index) => index).filter((item, index) => { return this.score_arr[item] === 0 })\r\n      console.log(indexArr)\r\n      if (indexArr.length === 0) {\r\n        console.log(111)\r\n        return true\r\n      } else {\r\n        // 找到最近未答题的题--跳转\r\n        this.qs_index = indexArr[0]\r\n        this.$message.success('未答题完毕!请检查')\r\n        return false\r\n      }\r\n    },\r\n    // 提交分数并且将分数记录发给后台\r\n    async submitScore () {\r\n      if (!this.checkEntireQS()) return\r\n      let score = 0\r\n      for (const eachScore of this.score_arr) {\r\n        score += eachScore\r\n      }\r\n      this.final_score = score\r\n      // 展示分数\r\n      this.isShow = true\r\n      // 发送存储分数给后台\r\n      await sendScoreToBackEnd(this.final_score)\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" >\r\n.my-base-test{\r\n  width: 90%;\r\n  height: 95%;\r\n  background-color: rgb(255, 255, 255);\r\n  border-radius: 1rem;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  .pop{\r\n    width: 68%;\r\n    height: 61%;\r\n    // background-color: black;\r\n    z-index: 1;\r\n    position: fixed;\r\n    .img{\r\n      margin: 0 auto;\r\n      width: 60%;\r\n      height: 100%;\r\n      // background-color: red;\r\n      background: url('../../../assets/images/新分数板.png') no-repeat ;\r\n      background-size: 100% 100%;\r\n      position: relative;\r\n      // z-index: 2;\r\n      >span{\r\n        // font-family: 'scoreMain';\r\n        position: absolute;\r\n        top: 25%;\r\n        left: 12%;\r\n        font-size: 29vh;\r\n        font-style: italic;\r\n        color: red;\r\n        }\r\n      }\r\n      .exitBtn{\r\n        border-radius: 8px;\r\n        width: 15%;\r\n        height: 8%;\r\n        background-color: #b0b0b0;\r\n        position: absolute;\r\n        bottom: 18%;\r\n        right: 21%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        span{\r\n          color: white;\r\n        }\r\n        img{\r\n          width: 25%;\r\n          height: 75%;\r\n        }\r\n      }\r\n      .exitBtn:hover{\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  .inner-box{\r\n    width: 80%;\r\n    height: 78%;\r\n    //\r\n\r\n    // background-color: red;\r\n    // border-radius: 27px;\r\n    >span{\r\n        font-size: 31px;\r\n        font-weight: 550;\r\n        color: rgb(176, 176, 176);\r\n    }\r\n    .bottom-box{\r\n        padding: 2%;\r\n        border-top: 1px solid black;\r\n        margin-top: 4%;\r\n        height: 70%;\r\n        .el-radio-group{\r\n            display: flex;\r\n            flex-direction: column;\r\n            .el-radio{\r\n            margin-top: 36px;\r\n            display: flex;\r\n            align-items: center;\r\n            .el-radio__label{\r\n                  color: rgb(187, 187, 187);\r\n                  font-size: 22px;\r\n                  line-height: 22px;\r\n                  }\r\n            .el-radio__label:hover{\r\n                  color: pink;\r\n                  }\r\n              }\r\n        }\r\n        .btnGroup{\r\n            margin: 0 auto;\r\n            width: 98%;\r\n            height: 34%;\r\n            /* background-color: red; */\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: space-between;\r\n            .left-btn{\r\n                width: 91px;\r\n                height: 40px;\r\n                background-color: #b0b0b0;\r\n                border-radius: 12px;\r\n                display: flex;\r\n                align-items: center;\r\n                img{\r\n                    width: 32%;\r\n                    height: 75%;\r\n                }\r\n                span{\r\n                    color: white;\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n            .left-btn:hover{\r\n              cursor: pointer;\r\n            }\r\n            .right-btn{\r\n                width: 91px;\r\n                height: 40px;\r\n                background-color: #b0b0b0;\r\n                border-radius: 12px;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: flex-end;\r\n                img{\r\n                    width: 35%;\r\n                    height: 75%;\r\n                }\r\n                span{\r\n                    color: white;\r\n                    font-size: 16px;\r\n                }\r\n            }\r\n            .right-btn:hover{\r\n                cursor: pointer;\r\n            }\r\n    }\r\n    }\r\n\r\n  }\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}