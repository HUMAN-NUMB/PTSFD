{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate'; // api获取用户信息\n\nimport { getUserInfoAPI } from '@/api';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    // 用来存储登录成功之后，得到的token\n    token: '',\n    // 用来存储登录成功并跳转到主页面时，得到的用户信息\n    userInfo: {}\n  },\n  getters: {\n    username: state => state.userInfo.username,\n    nickname: state => state.userInfo.nickname,\n    user_pic: state => state.userInfo.user_pic\n  },\n  mutations: {\n    // 更新token的函数\n    updataToken(state, newToken) {\n      state.token = newToken;\n    },\n\n    // 将获取到的用户信息存入vuex\n    updateUserInfo(state, newUI) {\n      state.userInfo = newUI;\n    }\n\n  },\n  actions: {\n    // 异步获得用户信息\n    async initUserInfo(context) {\n      const {\n        data: res\n      } = await getUserInfoAPI();\n\n      if (res.code === 0) {\n        context.commit('updateUserInfo', res.data);\n      }\n    }\n\n  },\n  modules: {},\n  // 配置为vuex的插件\n  plugins: [createPersistedState()]\n}); // vuex默认保存再内存中，刷新会清空","map":{"version":3,"names":["Vue","Vuex","createPersistedState","getUserInfoAPI","use","Store","state","token","userInfo","getters","username","nickname","user_pic","mutations","updataToken","newToken","updateUserInfo","newUI","actions","initUserInfo","context","data","res","code","commit","modules","plugins"],"sources":["D:/stu/front/practice/HumanNumb/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\n// api获取用户信息\nimport { getUserInfoAPI } from '@/api'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    // 用来存储登录成功之后，得到的token\n    token: '',\n    // 用来存储登录成功并跳转到主页面时，得到的用户信息\n    userInfo: {}\n  },\n  getters: {\n    username: (state) => state.userInfo.username,\n    nickname: (state) => state.userInfo.nickname,\n    user_pic: (state) => state.userInfo.user_pic\n  },\n  mutations: {\n    // 更新token的函数\n    updataToken (state, newToken) {\n      state.token = newToken\n    },\n    // 将获取到的用户信息存入vuex\n    updateUserInfo (state, newUI) {\n      state.userInfo = newUI\n    }\n  },\n  actions: {\n    // 异步获得用户信息\n    async initUserInfo (context) {\n      const { data: res } = await getUserInfoAPI()\n      if (res.code === 0) { context.commit('updateUserInfo', res.data) }\n    }\n  },\n  modules: {\n  },\n  // 配置为vuex的插件\n  plugins: [createPersistedState()]\n})\n// vuex默认保存再内存中，刷新会清空\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC,C,CACA;;AACA,SAASC,cAAT,QAA+B,OAA/B;AACAH,GAAG,CAACI,GAAJ,CAAQH,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAe;EAC5BC,KAAK,EAAE;IACL;IACAC,KAAK,EAAE,EAFF;IAGL;IACAC,QAAQ,EAAE;EAJL,CADqB;EAO5BC,OAAO,EAAE;IACPC,QAAQ,EAAGJ,KAAD,IAAWA,KAAK,CAACE,QAAN,CAAeE,QAD7B;IAEPC,QAAQ,EAAGL,KAAD,IAAWA,KAAK,CAACE,QAAN,CAAeG,QAF7B;IAGPC,QAAQ,EAAGN,KAAD,IAAWA,KAAK,CAACE,QAAN,CAAeI;EAH7B,CAPmB;EAY5BC,SAAS,EAAE;IACT;IACAC,WAAW,CAAER,KAAF,EAASS,QAAT,EAAmB;MAC5BT,KAAK,CAACC,KAAN,GAAcQ,QAAd;IACD,CAJQ;;IAKT;IACAC,cAAc,CAAEV,KAAF,EAASW,KAAT,EAAgB;MAC5BX,KAAK,CAACE,QAAN,GAAiBS,KAAjB;IACD;;EARQ,CAZiB;EAsB5BC,OAAO,EAAE;IACP;IACA,MAAMC,YAAN,CAAoBC,OAApB,EAA6B;MAC3B,MAAM;QAAEC,IAAI,EAAEC;MAAR,IAAgB,MAAMnB,cAAc,EAA1C;;MACA,IAAImB,GAAG,CAACC,IAAJ,KAAa,CAAjB,EAAoB;QAAEH,OAAO,CAACI,MAAR,CAAe,gBAAf,EAAiCF,GAAG,CAACD,IAArC;MAA4C;IACnE;;EALM,CAtBmB;EA6B5BI,OAAO,EAAE,EA7BmB;EA+B5B;EACAC,OAAO,EAAE,CAACxB,oBAAoB,EAArB;AAhCmB,CAAf,CAAf,C,CAkCA"},"metadata":{},"sourceType":"module"}