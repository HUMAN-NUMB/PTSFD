{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { getUserInfoAPI } from '@/api'\nexport default {\n  name: 'my-layout',\n  methods: {\n    // 退出按钮点击\n    quitFn() {\n      // 添加确认\n      this.$confirm('是否退出登录？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$message({\n          type: 'success',\n          message: '退出成功!'\n        }); // 清空token\n\n        this.$store.commit('updataToken', ''); // 清空用户信息\n\n        this.$store.commit('updateUserInfo', {}); // 跳转回登录页面\n\n        this.$router.push('/login');\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消退出'\n        });\n      });\n    }\n\n  } // 登录之后跳转到主页这里时，获取用户的信息\n  // (不要在这写，如果在这写，刷新主页，每次都会发送请求获取已经获取过的内容，浪费资源)\n  // 可以使用全局路由守卫\n  // created () {\n  //   this.$store.dispatch('initUserInfo')\n  //   console.log(1)\n  // }\n\n};","map":{"version":3,"mappings":";AAmDA;AACA;EACAA,iBADA;EAEAC;IACA;IACAC;MACA;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAIAC,IAJA,CAIA;QACA;UACAD,eADA;UAEAE;QAFA,GADA,CAKA;;QACA,sCANA,CAOA;;QACA,yCARA,CASA;;QACA;MACA,CAfA,EAeAC,KAfA,CAeA;QACA;UACAH,YADA;UAEAE;QAFA;MAIA,CApBA;IAqBA;;EAzBA,CAFA,CA6BA;EACA;EACA;EACA;EACA;EACA;EACA;;AAnCA","names":["name","methods","quitFn","confirmButtonText","cancelButtonText","type","then","message","catch"],"sourceRoot":"src/views/layout","sources":["index.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"main-container\">\r\n    <el-header>\r\n\r\n        <img src=\"../../assets/images/logo.png\" alt=\"\">\r\n         <el-menu mode=\"horizontal\"\r\n         background-color=\"#23262E\"\r\n         active-text-color=\"#409EFF\"\r\n         text-color=\"#fff\"\r\n         >\r\n            <el-submenu index=\"2\" >\r\n              <template slot=\"title\">\r\n                  <img src=\"../../assets/images/logo.png\" alt=\"\" class=\"avatar\">\r\n                  <span>个人中心</span>\r\n              </template>\r\n              <el-menu-item index=\"2-1\"><i class=\"el-icon-s-operation\"></i>基本资料</el-menu-item>\r\n              <el-menu-item index=\"2-2\"><i class=\"el-icon-camera\"></i>更换头像</el-menu-item>\r\n              <el-menu-item index=\"2-3\"><i class=\"el-icon-key\"></i>重置密码</el-menu-item>\r\n              <el-submenu index=\"2-4\">\r\n                <template slot=\"title\">选项4</template>\r\n                <el-menu-item index=\"2-4-1\">选项1</el-menu-item>\r\n                <el-menu-item index=\"2-4-2\">选项2</el-menu-item>\r\n                <el-menu-item index=\"2-4-3\">选项3</el-menu-item>\r\n              </el-submenu>\r\n            </el-submenu>\r\n            <!-- 经验：在组件标签上绑定的所有事件都是自定义事件\r\n                  需要组件内$emit来触发\r\n                  万一组件内不支持这个原生事件名称\r\n                  解决：@事件名.native\r\n                  .native给组件内根标签，绑定这个原生的事件 -->\r\n            <el-menu-item index=\"3\" @click=\"quitFn\"><i class=\"el-icon-switch-button\"></i>退出</el-menu-item>\r\n        </el-menu>\r\n    </el-header>\r\n    <el-container>\r\n        <el-aside width=\"200px\">\r\n          <div>\r\n              <!-- 利用null判断运算符 省去v-if -->\r\n              <img :src=\"$store.state.userInfo.user_pic ?? require('../../assets/images/scene.jpg')\" alt=\"\" >\r\n              <!-- 用 || 判断，不用??，因为空字符串不生效 -->\r\n              <span>欢迎{{$store.state.userInfo.nickname || $store.state.userInfo.username}}</span>\r\n          </div>\r\n        </el-aside>\r\n        <el-container>\r\n            <el-main>Main</el-main>\r\n            <el-footer>© www.张伟是混蛋.com </el-footer>\r\n        </el-container>\r\n    </el-container>\r\n</el-container>\r\n</template>\r\n\r\n<script>\r\n// import { getUserInfoAPI } from '@/api'\r\nexport default {\r\n  name: 'my-layout',\r\n  methods: {\r\n    // 退出按钮点击\r\n    quitFn () {\r\n      // 添加确认\r\n      this.$confirm('是否退出登录？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '退出成功!'\r\n        })\r\n        // 清空token\r\n        this.$store.commit('updataToken', '')\r\n        // 清空用户信息\r\n        this.$store.commit('updateUserInfo', {})\r\n        // 跳转回登录页面\r\n        this.$router.push('/login')\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消退出'\r\n        })\r\n      })\r\n    }\r\n  }\r\n  // 登录之后跳转到主页这里时，获取用户的信息\r\n  // (不要在这写，如果在这写，刷新主页，每次都会发送请求获取已经获取过的内容，浪费资源)\r\n  // 可以使用全局路由守卫\r\n  // created () {\r\n  //   this.$store.dispatch('initUserInfo')\r\n  //   console.log(1)\r\n  // }\r\n}\r\n</script>\r\n\r\n<style  lang=\"less\" scoped>\r\n\r\n.main-container{\r\n  height: 100%; //找父\r\n  .el-header,\r\n  .el-aside{\r\n    background-color: #23262e;\r\n    div{\r\n      height: 70px;\r\n      border-top: 1px solid #000;\r\n      border-bottom: 1px solid #000;\r\n      img{\r\n        border-radius: .2px;\r\n        background-color: white;\r\n        width: 20px;\r\n        height: 20px;\r\n      }\r\n      span{\r\n        color: white;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n  .el-header{\r\n    // height: 62px !important;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .el-footer {\r\n    background-color: #eee;\r\n    font-size: 12px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n}\r\n.avatar {\r\n  border-radius: 50%;\r\n  width: 35px;\r\n  height: 35px;\r\n  background-color: #fff;\r\n  margin-right: 10px;\r\n  object-fit: cover;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}